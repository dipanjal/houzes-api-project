{
  "swagger": "2.0",
  "info": {
    "description": "BASE URL: `172.18.1.11:3001/api/v1`",
    "version": "1.0.0",
    "title": "Houzes API Doc",
    "termsOfService": "http://172.18.1.11:3001/terms/",
    "contact": {
      "email": "dipwsitaus@gmail.com"
    }
  },
  "host": "172.18.1.11:3001",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "OAuth",
      "description": "Operations with Authentications"
    },
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Test",
      "description": "For Testing Purposes"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/public/user/register": {
      "post": {
        "tags": ["User"],
        "summary": "Sign Up User",
        "description": "public access",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "/public/user/register",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "id": {"type":"integer"},
                "email": {"type":"string"},
                "password": {"type":"string"},
                "phone": {"type":"string"},
                "first_name": {"type":"string"},
                "last_name": {"type":"string"},
                "scope": {"type":"string"},
                "updatedAt": {  "type": "string"},
                "createdAt": {"type": "string"},
                "status": {"type": "string"}
              }
            }
          },
          "403":{
            "description": "email already existed, select an unique email"
          }
        }
      }
    },
    "/public/client/register": {
      "post": {
        "tags": ["OAuth"],
        "summary": "Register API Client After Sign-up",
        "description": "This API CLIENT belongs to User",
        "operationId": "createClient",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "/public/client/register",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OAuthClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "id": {"type":"integer", "value": 2 },
                "name": {"type":"string", "value": "Test Api App" },
                "client_id": {"type":"string", "value": "<client_id>"},
                "client_secret": {"type":"string", "value": "<client_secret>"},
                "scope": {"type":"string", "value": "default"},
                "user_id": {"type":"integer", "value": 2},
                "updatedAt": {  "type": "string" , "value": "<timestamp>"},
                "createdAt": {"type": "string", "value": "<timestamp>"}
              }
            }
          },
          "403":{
            "description": "Forbidden: no user found"
          },
          "400": {"description": "Bad Request"}
        }
      }
    },
    "/oauth/token": {
      "post": {
        "tags": ["OAuth"],
        "summary": "Request Access Token",
        "description": "Request To Generate Access Token",
        "operationId": "requestToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "/oauth/token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OAuthTokenForm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "client": {"type":"object"},
                "user": {"type":"object"},
                "access_token": {"type":"string", "value": "< access_token >"},
                "refresh_token": {"type":"string", "value": "< refresh_token >"},
                "accessTokenExpiresAt": {"type":"string", "value": "<timestamp>"},
                "refreshTokenExpiresAt": {"type":"string", "value": "<timestamp>" },
                "scope": {  "type": "boolean" , "value": true}
              }
            }
          },
          "400":{
            "description": "Bad Request"
          }
        }
      }
    },
    "/oauth/token/refresh": {
      "post": {
        "tags": ["OAuth"],
        "summary": "Refresh Access Token",
        "description": "Renew Access Token After Token Expired",
        "operationId": "refreshToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "/oauth/token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshTokenForm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "client": {"type":"object"},
                "user": {"type":"object"},
                "access_token": {"type":"string", "value": "<access_token>"},
                "refresh_token": {"type":"string", "value": "<refresh_token>"},
                "accessTokenExpiresAt": {"type":"string", "value": "<timestamp>"},
                "refreshTokenExpiresAt": {"type":"string", "value": "<timestamp>" },
                "scope": {  "type": "boolean" , "value": true}
              }
            }
          },
          "400":{
            "description": "Bad Request"
          }
        }
      }
    },
    "/oauth/token/revoke": {
      "post": {
        "tags": ["OAuth"],
        "summary": "Revoke Access Token",
        "description": "Logout",
        "operationId": "revokeToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "/oauth/revoke",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshTokenForm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "client": {"type":"object"},
                "user": {"type":"object"},
                "access_token": {"type":"string", "value": "<access_token>"},
                "refresh_token": {"type":"string", "value": "<refresh_token>"},
                "accessTokenExpiresAt": {"type":"string", "value": "<timestamp>"},
                "refreshTokenExpiresAt": {"type":"string", "value": "<timestamp>" },
                "scope": {  "type": "boolean" , "value": true}
              }
            }
          },
          "400":{
            "description": "Bad Request"
          }
        }
      }
    },
    "/test/all_tokens": {
      "get": {
        "tags": ["Test"],
        "summary": "Show All Tokens",
        "description": "Get All Access Tokens",
        "operationId": "getAllToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization Token",
            "required": true,
            "type": "string",
            "value": "Bearer <access_token>"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "client": {"type":"object"},
                "user": {"type":"object"}
              }
            }
          },
          "400":{
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {"type": "string"},
        "password": {"type": "string"},
        "phone": {
          "type": "string",
          "value": "+1-541-754-3010"
        },
        "first_name": {"type": "string"},
        "last_name": {"type": "string"}
      },
      "xml": {
        "name": "User"
      }
    },
    "OAuthClient": {
      "type": "object",
      "properties": {
        "email": {"type": "string"},
        "password": {"type": "string"},
        "client_name": {"type": "string"},
        "client_id": {"type": "string"},
        "client_secret": {"type": "string"}
      },
      "xml": {
        "name": "OAuthClient"
      }
    },
    "OAuthTokenForm": {
      "type": "object",
      "properties": {
        "grant_type": {"type": "string",
          "value": "password"
        },
        "email": {"type": "string"},
        "password": {"type": "string"},
        "client_id": {"type": "string"},
        "client_secret": {"type": "string"}
      },
      "xml": {"name": "OAuthTokenForm"}
    },
    "RefreshTokenForm": {
      "type": "object",
      "properties": {
        "grant_type": {
          "type": "string",
          "value": "refresh_token"
        },
        "client_id": {"type": "string"},
        "client_secret": {"type": "string"},
        "refresh_token": {"type": "string"}
      },
      "xml": {"name": "RefreshTokenForm"}
    }
  }
}